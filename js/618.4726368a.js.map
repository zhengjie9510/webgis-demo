{"version":3,"file":"js/618.4726368a.js","mappings":"iLACOA,GAAG,mB,0CAARC,EAAAA,EAAAA,IAAgC,MAAhCC,E,kJAOF,MAAMC,EAAOC,EAAQ,OAErB,OACEC,UACEC,KAAKC,MACP,EACAC,QAAS,CACPD,OACE,MAAME,EAAS,IAAIC,EAAAA,EAAc,kBAAmB,CAClDC,UAAW,IAAID,EAAAA,EACX,IAAIA,EAAAA,EAAkC,CACpCE,IAAK,6DACLC,WAAY,CAAC,IAAK,IAAK,IAAK,UAKhCH,EAAAA,EAAAA,oCACFD,EAAOK,gBAAkBC,OAAOC,kBAElCP,EAAOQ,MAAMC,kBAAkBC,KAAKC,SAAU,EAE9CV,EAAAA,EAAAA,KAA8BP,GAAMkB,MAAKC,IACvCb,EAAOc,OAAOD,GAEd,MAAME,EAAWF,EAAWE,SAASC,OAE/BC,EAAoB,GAC1BF,EAASG,SAAQC,IACf,GAAIA,EAAOC,UAAYD,EAAOC,SAASC,UAAW,CAChD,MAAMA,EAAYF,EAAOC,SAASC,UAAUC,SAASrB,EAAAA,EAAAA,OAE/CsB,EAAmB,IAAItB,EAAAA,EAAwB,CACnDuB,SAAU,IAAIvB,EAAAA,EAAwB,CACpCoB,UAAWA,EACXI,MAAO,MAIXR,EAAkBS,KAAKH,EACzB,KAGF,MAAMI,EAAuB,80BAwB7B3B,EAAOQ,MAAMoB,WAAWC,IACpB,IAAI5B,EAAAA,EAAiB,CACnBgB,kBAAmBA,EACnBa,WAAY,IAAI7B,EAAAA,EAAkC,CAChD8B,SAAU,IAAI9B,EAAAA,EAAgB,CAC5B+B,OAAQ,CACNC,SAAU,CACRC,UAAW,IAAIjC,EAAAA,EAAAA,mBAAgC,WAC/CkC,UAAW,IAAIlC,EAAAA,EAAAA,mBAAgC,WAC/CmC,MAAO,GACPC,QAAS,IAEXC,OAAQX,OAIdY,cAAc,IAEpB,GAEJ,I,WCxFJ,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://webgis/./src/components/public/trail_line_2.vue","webpack://webgis/./src/components/public/trail_line_2.vue?2021"],"sourcesContent":["<template>\n  <div id=\"cesiumContainer\"></div>\n</template>\n\n<script>\nimport 'cesium/Build/Cesium/Widgets/widgets.css'\nimport * as Cesium from 'cesium'\n\nconst road = require('../../../public/SampleData/road.json')\n\nexport default {\n  mounted() {\n    this.init()\n  },\n  methods: {\n    init() {\n      const viewer = new Cesium.Viewer('cesiumContainer', {\n        baseLayer: new Cesium.ImageryLayer(\n            new Cesium.UrlTemplateImageryProvider({\n              url: \"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png\",\n              subdomains: [\"a\", \"b\", \"c\", \"d\"],\n            })\n        )\n      });\n\n      if (Cesium.FeatureDetection.supportsImageRenderingPixelated()) {\n        viewer.resolutionScale = window.devicePixelRatio;\n      }\n      viewer.scene.postProcessStages.fxaa.enabled = true;\n\n      Cesium.GeoJsonDataSource.load(road).then(dataSource => {\n        viewer.zoomTo(dataSource);\n        // 提取实体\n        const entities = dataSource.entities.values;\n\n        const geometryInstances = [];\n        entities.forEach(entity => {\n          if (entity.polyline && entity.polyline.positions) {\n            const positions = entity.polyline.positions.getValue(Cesium.JulianDate.now());\n            // 创建 Primitive 用于绘制线\n            const geometryInstance = new Cesium.GeometryInstance({\n              geometry: new Cesium.PolylineGeometry({\n                positions: positions,\n                width: 2.0,\n              })\n            });\n\n            geometryInstances.push(geometryInstance);\n          }\n        });\n\n        const fragmentShaderSource = `\n          uniform vec4 baseColor;   // 线的底色（全线可见）\n          uniform vec4 glowColor;   // 流光颜色\n          uniform float speed;      // 流光速度\n          uniform float percent;    // 流光宽度百分比\n\n          czm_material czm_getMaterial(czm_materialInput materialInput){\n              czm_material material = czm_getDefaultMaterial(materialInput);\n              vec2 st = materialInput.st;\n\n              float t = fract(czm_frameNumber * speed / 1000.0);\n              t *= (1.0 + percent);\n\n              float glowAlpha = smoothstep(t - percent, t, st.s) * step(-t, -st.s);\n\n              vec3 finalColor = baseColor.rgb * (1.0 - glowAlpha) + glowColor.rgb * glowAlpha;\n\n              material.diffuse = finalColor;\n              material.emission = glowColor.rgb * glowAlpha;\n\n              return material;\n          }\n        `\n\n        viewer.scene.primitives.add(\n            new Cesium.Primitive({\n              geometryInstances: geometryInstances,\n              appearance: new Cesium.PolylineMaterialAppearance({\n                material: new Cesium.Material({\n                  fabric: {\n                    uniforms: {\n                      baseColor: new Cesium.Color.fromCssColorString('#26d7f4'),\n                      glowColor: new Cesium.Color.fromCssColorString('#a3f68e'),\n                      speed: 20.0,\n                      percent: 0.4,\n                    },\n                    source: fragmentShaderSource\n                  },\n                }),\n              }),\n              allowPicking: false\n            })\n        )\n      });\n    }\n  }\n}\n</script>\n<style lang=\"scss\" scoped>\n#cesiumContainer {\n  position: absolute;\n  height: 100%;\n  width: 100%;\n}\n</style>\n","import { render } from \"./trail_line_2.vue?vue&type=template&id=1dfad6b8&scoped=true\"\nimport script from \"./trail_line_2.vue?vue&type=script&lang=js\"\nexport * from \"./trail_line_2.vue?vue&type=script&lang=js\"\n\nimport \"./trail_line_2.vue?vue&type=style&index=0&id=1dfad6b8&lang=scss&scoped=true\"\n\nimport exportComponent from \"/Users/zhengjie/Documents/webgis/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1dfad6b8\"]])\n\nexport default __exports__"],"names":["id","_createElementBlock","_hoisted_1","road","require","mounted","this","init","methods","viewer","Cesium","baseLayer","url","subdomains","resolutionScale","window","devicePixelRatio","scene","postProcessStages","fxaa","enabled","then","dataSource","zoomTo","entities","values","geometryInstances","forEach","entity","polyline","positions","getValue","geometryInstance","geometry","width","push","fragmentShaderSource","primitives","add","appearance","material","fabric","uniforms","baseColor","glowColor","speed","percent","source","allowPicking","__exports__","render"],"sourceRoot":""}